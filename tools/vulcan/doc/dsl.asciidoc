Ruby DSL
========

Description
-----------
An alternative configuration format that actually simply generates a json configuration

.Why?
json is awesome but large complex json blobs are hard to edit.
This DSL adds better (ruby) syntax checking, provides a flatter structure and makes it easier to define your configuration


Requirements
------------
It requires two gems:
  $ gem install json; gem install activesupport

  * json for ruby < 1.9
  * ActiveSupport for OrderedHash


The DSL
-------
Every method call is saved to a hash with the method name as key and the argument(s) as value, except these special helper calls

.version

also adds the key 'major' with value of the characters before the first dot in the string passed to version

.dependencies

the root node

.package <package> 

will be added under the "~" list in the current parent block +
Helper intended for package to download +
The key "package" will be defined with the value of the argument

.group <description>

will be added under the "~" list in the current parent block +
Helper intended for subconfiguration +
The key "description" will be defined with the value of the argument

Using 
-----
 1. Make a new ruby script that requires the dsl
 2. Write the dsl
 3. ruby project.rb > PROJECT


Example DSL configuration file
------------------------------
[source,rb]
----
# project.rb

VULCAN_PATH = "../vendor/vulcan/ruby"
require "#{VULCAN_PATH}/dsl"

dependencies do
  description "Defaults"
  format "zip"
  type "url"
  artifactory "https://artifactory.spotify.net/artifactory"
  client_artifactory "${artifactory}/client-infrastructure"
  binaries_server "https://binaries.spotify.net"
  package_id "null"
  check_package_id "false"
  action "copy"
  
  group "Stitch" do
    stitch_base "${client_artifactory}"
    id "${name}.${major}"
    path "binaries/apps/${id}"
    name "${package}"
    remote_path "${project}/${package}/${branch}/${version}"
    remote_file "${name}.${version}.${branch}.${build}.spa"
    url "${stitch_base}/${remote_path}/${remote_file}"
    branch "stable"
    
    group "Frameworks" do
      project "stitch-frameworks"
      
      package "views" do
        version "1.42.1"
        build "62576fc.80"
      end
      
      package "logging-utils" do
        version "0.0.11"
        build "36b952d.88"
        branch "master"
      end
      
      group "Frameworks in the apps repo" do
        project "stitch-apps"
        
        package "error" do
          version "1.0.0"
          build "f4ac9fc.6"
          branch "master"
        end
        
        package "install" do
          version "1.0.0"
          build "c6a6f29.14"
          branch "master"
        end
      end
    end
  end
end
----